int min_days(vector<int> &arr, int mid, int d){
    int ans = 1;
    int n = arr.size();
    int storage = 0;
    for(int i=0; i<n; i++){
        storage += arr[i];
        if(storage > mid){
            storage = 0;
            storage += arr[i];
            ans++;
        }
    }
    return ans;
}

int leastWeightCapacity(vector<int> &weights, int d)
{
    // Write your code here.
    int n = weights.size();
    int maxi = INT_MIN;
    int sum = 0;
    int ans = -1;
    for(int i=0; i<n; i++){
        maxi = max(maxi, weights[i]);
        sum += weights[i];
    }
    int low = maxi, high = sum;
    while(low<=high){
        int mid = (low + high)/2;
        int result = min_days(weights, mid, d);
        if(result <= d){
            ans = mid;
            high = mid-1;
        }else{
            low = mid+1;
        }
    }
    return ans;
}
