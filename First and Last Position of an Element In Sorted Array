int first(vector<int> &arr, int n, int k){
    int first = -1;
    int low = 0, high = n-1;
    while(low<=high){
        int mid = (low+high)/2;
        if(arr[mid] == k){
            first = mid , high = mid-1;
        }
        else if(arr[mid] < k){
            low = mid+1;
        }else{
            high = mid-1;
        }
    }
    return first;
}
int last(vector<int> &arr, int n, int k){
    int last = -1;
    int low = 0,  high = n-1;
    while(low <= high){
        int mid =(low + high)/2;
        if(arr[mid] == k){
            last = mid, low = mid+1;
        }
        else if(arr[mid]<k){
            low = mid+1;
        }
        else{
            high = mid-1;
        }
    }
    return last;
}
pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int k)
{
    // Write your code here
    int f = first(arr, n, k);
    int l = last(arr, n, k); 
    return {f, l};
}
